name: CI/CD
on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1) 코드 체크아웃 & 빌드
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build Backend JAR
        run: ./gradlew clean bootJar -x test

      - name: Build Frontend
        working-directory: frontend
        run: |
          npm install -g yarn
          rm -rf node_modules package-lock.json yarn.lock || true
          yarn install --frozen-lockfile
          yarn build

      # 2) SSH Agent 세팅 (프론트 서버 키를 Agent 에 로드)
      - name: Set up SSH agent
        uses: webfactory/ssh-agent@v0.9.1
        with:
          ssh-private-key: ${{ secrets.FRONT_SSH_PRIVATE_KEY }}

      # 3) SSH Config 작성 (러너의 ~/.ssh/config 에 ProxyJump 설정)
      - name: Write SSH config
        run: |
          mkdir -p ~/.ssh
          cat << 'EOF' > ~/.ssh/config
          Host frontend
            HostName ${{ secrets.FRONT_SSH_HOST }}
            User     ${{ secrets.FRONT_SSH_USER }}
            ForwardAgent yes

          Host backend
            HostName ${{ secrets.BACKEND_SSH_HOST }}
            User     ${{ secrets.BACKEND_SSH_USER }}
            ProxyJump frontend
            ForwardAgent yes
          EOF
          chmod 600 ~/.ssh/config

      # 4) Backend 배포 (‘backend’ alias 로 ProxyJump 자동 적용)
      - name: Deploy & Restart Backend
        uses: appleboy/scp-action@v1
        with:
          host: backend
          username: ${{ secrets.BACKEND_SSH_USER }}
          source: "build/libs/*.jar"
          target: "/opt/law-n-road-release/"

      - name: Migrate DB & Restart Backend
        uses: appleboy/ssh-action@v1
        with:
          host: backend
          username: ${{ secrets.BACKEND_SSH_USER }}
          script: |
            mysql -h "${{ secrets.DB_HOST }}" -P "${{ secrets.DB_PORT }}" \
                  -u "${{ secrets.DB_USER }}" -p"${{ secrets.DB_PASSWORD }}" \
                  "${{ secrets.DB_NAME }}" < /opt/law-n-road-release/db/migrations/init.sql
            sudo systemctl daemon-reload
            sudo systemctl restart law-n-road-backend.service

      # 5) Frontend 배포 (직접 접근)
      - name: Deploy Frontend Artifact
        uses: appleboy/scp-action@v1
        with:
          host: ${{ secrets.FRONT_SSH_HOST }}
          username: ${{ secrets.FRONT_SSH_USER }}
          key:      ${{ secrets.FRONT_SSH_PRIVATE_KEY }}
          source:   "frontend/dist/"
          target:   "/opt/law-n-road-release/frontend/"

      - name: Reload Nginx
        uses: appleboy/ssh-action@v1
        with:
          host:     ${{ secrets.FRONT_SSH_HOST }}
          username: ${{ secrets.FRONT_SSH_USER }}
          key:      ${{ secrets.FRONT_SSH_PRIVATE_KEY }}
          script:   sudo systemctl reload nginx

      # 6) 결과를 Slack 으로 알리기
      - name: Notify Slack (도로의-판정단)
        if: always()
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,commit,author,action,message
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL_ROAD }}
