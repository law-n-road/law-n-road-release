name: CI/CD
on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build Backend JAR
        run: ./gradlew clean bootJar -x test

      - name: Build Frontend
        working-directory: frontend
        run: |
          npm install -g yarn
          rm -rf node_modules package-lock.json yarn.lock || true
          yarn install --frozen-lockfile
          yarn build

      # ────────────────────────────────────────────────
      # 1) 프록시(프론트) 서버에서 백엔드 호스트 해석 확인
      # ────────────────────────────────────────────────
      - name: Verify backend DNS on proxy
        uses: appleboy/ssh-action@v1
        with:
          host:     ${{ secrets.FRONT_SSH_HOST }}
          username: ${{ secrets.FRONT_SSH_USER }}
          key:      ${{ secrets.FRONT_SSH_PRIVATE_KEY }}
          script: |
            echo "Resolving ${{ secrets.BACKEND_SSH_HOST }} from proxy..."
            nslookup ${{ secrets.BACKEND_SSH_HOST }} || dig +short ${{ secrets.BACKEND_SSH_HOST }}

      # ────────────────────────────────────────────────
      # 2) Backend 배포 (debug 모드)
      # ────────────────────────────────────────────────
      - name: Deploy & Restart Backend (debug)
        uses: appleboy/scp-action@v1
        with:
          host:            ${{ secrets.BACKEND_SSH_HOST }}
          username:        ${{ secrets.BACKEND_SSH_USER }}
          key:             ${{ secrets.BACKEND_SSH_PRIVATE_KEY }}
          proxy_host:      ${{ secrets.FRONT_SSH_HOST }}
          proxy_username:  ${{ secrets.FRONT_SSH_USER }}
          proxy_key:       ${{ secrets.FRONT_SSH_PRIVATE_KEY }}
          source:          "build/libs/*.jar"
          target:          "/opt/law-n-road-release/"
          port:            22
          protocol:        tcp
          timeout:         30s
          command_timeout: 10m
          tar_exec:        tar
          proxy_port:      22
          proxy_timeout:   30s
          debug:           true
          curl_insecure:   false
          capture_stdout:  false

      # ────────────────────────────────────────────────
      # 3) DB 마이그레이션 & 백엔드 재시작
      # ────────────────────────────────────────────────
      - name: Migrate DB & Restart Backend
        uses: appleboy/ssh-action@v1
        with:
          host:            ${{ secrets.BACKEND_SSH_HOST }}
          username:        ${{ secrets.BACKEND_SSH_USER }}
          key:             ${{ secrets.BACKEND_SSH_PRIVATE_KEY }}
          proxy_host:      ${{ secrets.FRONT_SSH_HOST }}
          proxy_username:  ${{ secrets.FRONT_SSH_USER }}
          proxy_key:       ${{ secrets.FRONT_SSH_PRIVATE_KEY }}
          script: |
            mysql -h "${{ secrets.DB_HOST }}" -P "${{ secrets.DB_PORT }}" \
              -u "${{ secrets.DB_USER }}" -p"${{ secrets.DB_PASSWORD }}" \
              "${{ secrets.DB_NAME }}" < /opt/law-n-road-release/db/migrations/init.sql
            sudo systemctl daemon-reload
            sudo systemctl restart law-n-road-backend.service

      # ────────────────────────────────────────────────
      # 4) Frontend 배포 (직접 접근)
      # ────────────────────────────────────────────────
      - name: Deploy Frontend Artifact
        uses: appleboy/scp-action@v1
        with:
          host:     ${{ secrets.FRONT_SSH_HOST }}
          username: ${{ secrets.FRONT_SSH_USER }}
          key:      ${{ secrets.FRONT_SSH_PRIVATE_KEY }}
          source:   "frontend/dist/"
          target:   "/opt/law-n-road-release/frontend/"

      - name: Reload Nginx
        uses: appleboy/ssh-action@v1
        with:
          host:     ${{ secrets.FRONT_SSH_HOST }}
          username: ${{ secrets.FRONT_SSH_USER }}
          key:      ${{ secrets.FRONT_SSH_PRIVATE_KEY }}
          script:   sudo systemctl reload nginx

      - name: Notify Slack (도로의-판정단)
        if: always()
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,commit,author,action,message
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL_ROAD }}
