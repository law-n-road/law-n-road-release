name: CI/CD
on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1) 체크아웃 & 빌드
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Make Gradlew Executable
        run: chmod +x ./gradlew

      - name: Build Backend JAR
        run: ./gradlew clean bootJar -x test

      - name: Build Frontend
        working-directory: frontend
        run: |
          npm install -g yarn
          rm -rf node_modules package-lock.json yarn.lock || true
          yarn install --frozen-lockfile
          yarn build

      # 2) SSH 에이전트에 프론트 키 로드
      - name: Setup SSH agent
        uses: webfactory/ssh-agent@v0.9.1
        with:
          ssh-private-key: ${{ secrets.FRONT_SSH_PRIVATE_KEY }}

      # 3) SCP/SSH 액션으로 ProxyJump 설정
      - name: Deploy & Restart Backend via Frontend Proxy
        uses: appleboy/scp-action@v1
        with:
          host:       ${{ secrets.BACKEND_SSH_HOST }}
          username:   ${{ secrets.BACKEND_SSH_USER }}
          key:        ${{ secrets.FRONT_SSH_PRIVATE_KEY }}
          port:       22
          source:     build/libs/*.jar
          target:     /opt/law-n-road-release/

          proxy_host: ${{ secrets.FRONT_SSH_HOST }}
          proxy_user: ${{ secrets.FRONT_SSH_USER }}
          proxy_key:  ${{ secrets.FRONT_SSH_PRIVATE_KEY }}
          proxy_port: 22

      - name: Migrate DB & Restart Backend via Frontend Proxy
        uses: appleboy/ssh-action@v1
        with:
          host:       ${{ secrets.BACKEND_SSH_HOST }}
          username:   ${{ secrets.BACKEND_SSH_USER }}
          key:        ${{ secrets.FRONT_SSH_PRIVATE_KEY }}
          port:       22

          proxy_host: ${{ secrets.FRONT_SSH_HOST }}
          proxy_user: ${{ secrets.FRONT_SSH_USER }}
          proxy_key:  ${{ secrets.FRONT_SSH_PRIVATE_KEY }}
          proxy_port: 22

          script: |
            mysql -h "${{ secrets.DB_HOST }}" -P "${{ secrets.DB_PORT }}" \
                  -u "${{ secrets.DB_USER }}" -p"${{ secrets.DB_PASSWORD }}" \
                  "${{ secrets.DB_NAME }}" < /opt/law-n-road-release/db/migrations/init.sql
            sudo systemctl daemon-reload
            sudo systemctl restart law-n-road-backend.service

      # 4) Frontend 배포 (직접 접근)
      - name: Deploy Frontend Artifact
        uses: appleboy/scp-action@v1
        with:
          host:     ${{ secrets.FRONT_SSH_HOST }}
          username: ${{ secrets.FRONT_SSH_USER }}
          key:      ${{ secrets.FRONT_SSH_PRIVATE_KEY }}
          port:     22
          source:   frontend/dist/
          target:   /opt/law-n-road-release/frontend/

      - name: Reload Nginx
        uses: appleboy/ssh-action@v1
        with:
          host:     ${{ secrets.FRONT_SSH_HOST }}
          username: ${{ secrets.FRONT_SSH_USER }}
          key:      ${{ secrets.FRONT_SSH_PRIVATE_KEY }}
          port:     22
          script:   sudo systemctl reload nginx

      # 5) Slack 알림
      - name: Notify Slack (도로의-판정단)
        if: always()
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,commit,author,action,message
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL_ROAD }}
