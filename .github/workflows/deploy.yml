name: CI/CD

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Make Gradlew Executable
        run: chmod +x ./gradlew

      - name: Build Backend JAR
        run: ./gradlew clean bootJar -x test

      - name: Build Frontend (with Yarn)
        working-directory: frontend
        run: |
          npm install -g yarn
          rm -rf node_modules package-lock.json yarn.lock || true
          yarn install --frozen-lockfile
          yarn build

      # ----------------------------------------------
      # Bastion(프록시) 경유 배포 스텝
      # ----------------------------------------------
      - name: Prepare Bastion SSH key
        run: |
          mkdir -p ~/.ssh
          cat << 'EOF' > ~/.ssh/bastion.pem
          ${{ secrets.BASTION_SSH_PRIVATE_KEY }}
          EOF
          chmod 600 ~/.ssh/bastion.pem

      - name: Deploy & Restart Backend via Bastion
        uses: appleboy/scp-action@v1
        with:
          host: ${{ secrets.BACKEND_PRIVATE_HOST }}
          username: ${{ secrets.BACKEND_SSH_USER }}
          key_path: ~/.ssh/bastion.pem
          port: 22
          source: build/libs/*.jar
          target: /opt/law-n-road-release/
          # -- Bastion(프록시) 설정 --
          proxy_host:    ${{ secrets.BASTION_HOST }}
          proxy_port:    22
          proxy_username: ${{ secrets.BASTION_SSH_USER }}
          proxy_key_path: ~/.ssh/bastion.pem

      - name: Migrate DB & Restart Backend via Bastion
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.BACKEND_PRIVATE_HOST }}
          username: ${{ secrets.BACKEND_SSH_USER }}
          key_path: ~/.ssh/bastion.pem
          # -- Bastion(프록시) 설정 --
          proxy_host:    ${{ secrets.BASTION_HOST }}
          proxy_port:    22
          proxy_username: ${{ secrets.BASTION_SSH_USER }}
          proxy_key_path: ~/.ssh/bastion.pem
          script: |
            mysql -h "${{ secrets.DB_HOST }}" -P "${{ secrets.DB_PORT }}" \
                  -u "${{ secrets.DB_USER }}" -p"${{ secrets.DB_PASSWORD }}" \
                  "${{ secrets.DB_NAME }}" < /opt/law-n-road-release/db/migrations/init.sql
            sudo systemctl daemon-reload
            sudo systemctl restart law-n-road-backend.service

      - name: Deploy Frontend Artifact via Bastion
        uses: appleboy/scp-action@v1
        with:
          host: ${{ secrets.FRONT_SSH_HOST }}
          username: ${{ secrets.FRONT_SSH_USER }}
          key_path: ~/.ssh/bastion.pem
          port: 22
          source: frontend/dist/
          target: /opt/law-n-road-release/frontend/
          # (프론트도 Bastion 경유 필요 시)
          proxy_host:    ${{ secrets.BASTION_HOST }}
          proxy_port:    22
          proxy_username: ${{ secrets.BASTION_SSH_USER }}
          proxy_key_path: ~/.ssh/bastion.pem

      - name: Reload Nginx via Bastion
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.FRONT_SSH_HOST }}
          username: ${{ secrets.FRONT_SSH_USER }}
          key_path: ~/.ssh/bastion.pem
          # (프론트도 Bastion 경유 필요 시)
          proxy_host:    ${{ secrets.BASTION_HOST }}
          proxy_port:    22
          proxy_username: ${{ secrets.BASTION_SSH_USER }}
          proxy_key_path: ~/.ssh/bastion.pem
          script: sudo systemctl reload nginx

      - name: Notify Slack (도로의-판정단)
        if: always()
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,commit,author,action,message
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL_ROAD }}
