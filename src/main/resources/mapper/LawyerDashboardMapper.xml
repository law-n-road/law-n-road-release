<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.lawnroad.dashboard.mapper.LawyerDashboardMapper">

    <!-- 오늘 일정 조회 (상담 + 방송 통합) -->
    <select id="getTodaySchedule" resultType="com.lawnroad.dashboard.dto.TodayScheduleDto">
        (SELECT
             TIME_FORMAT(wts.slot_time, '%H:%i') as time,
             CONCAT(c.name, '님 상담') as event,
             'consultation' as type,
             c.name as clientName
         FROM reservations r
             JOIN weekly_time_slots wts ON r.slot_no = wts.no
             JOIN user u ON r.user_no = u.no
             JOIN client c ON u.no = c.no
         WHERE wts.user_no = #{lawyerNo}
           AND wts.slot_date = CURDATE()
           AND r.status = 'REQUESTED')

        UNION ALL

        (SELECT
             TIME_FORMAT(start_time, '%H:%i') as time,
             name as event,
             'broadcast' as type,
             NULL as clientName
         FROM broadcast_schedule
         WHERE user_no = #{lawyerNo}
           AND DATE(start_time) = CURDATE())

        ORDER BY time
    </select>

    <resultMap id="TomorrowConsultationRequestResultMap" type="com.lawnroad.dashboard.dto.TomorrowConsultationRequestDto">
        <id property="requestId" column="request_id"/>
        <result property="clientName" column="client_name"/>
        <result property="clientPhone" column="client_phone"/>
        <result property="requestTime" column="request_time"/>
        <result property="requestDateTime" column="request_date_time"/>
    </resultMap>

    <!-- 내일 상담 신청 목록 조회 -->
    <select id="selectTomorrowConsultationRequests" resultMap="TomorrowConsultationRequestResultMap">
        SELECT
            r.no as request_id,
            c.name as client_name,
            c.phone as client_phone,
            TIME_FORMAT(r.created_at, '%H:%i') as request_time,
            DATE_FORMAT(r.created_at, '%Y-%m-%d %H:%i:%s') as request_date_time
        FROM reservations r
                 JOIN user u ON r.user_no = u.no
                 JOIN client c ON u.no = c.no
        WHERE DATE(r.created_at) = DATE_ADD(CURDATE(), INTERVAL 1 DAY)
          AND r.status = 'REQUESTED'
        ORDER BY r.created_at DESC
    </select>

    <resultMap id="TomorrowBroadcastResultMap" type="com.lawnroad.dashboard.dto.TomorrowBroadcastDto">
        <id     property="scheduleNo" column="no"/>
        <result property="name"       column="name"/>
        <result property="date"       column="date"/>
        <result property="startTime"  column="start_time"/>
    </resultMap>

    <select id="selectTomorrowBroadcasts"
            resultMap="TomorrowBroadcastResultMap">
        SELECT
            no,
            name,
            date,
            start_time
        FROM broadcast_schedule
        WHERE date = #{date}
          AND user_no = #{userNo}
    </select>


    <!-- 주간 통계 ResultMap 추가 -->
    <resultMap id="WeeklyStatsResultMap" type="com.lawnroad.dashboard.dto.WeeklyStatsDto">
        <result property="dayOfWeek" column="day_of_week"/>
        <result property="consultationCount" column="consultation_count"/>
        <result property="broadcastCount" column="broadcast_count"/>
    </resultMap>

    <!--  주간 상담 & 방송 통합 통계 조회 -->
    <select id="getWeeklyStats" parameterType="long" resultMap="WeeklyStatsResultMap">
        WITH RECURSIVE week_days AS (
            SELECT 1 as day_of_week
            UNION ALL
            SELECT day_of_week + 1
            FROM week_days
            WHERE day_of_week &lt; 7
        ),
                       this_week AS (
                           SELECT
                               DATE_SUB(CURDATE(), INTERVAL DAYOFWEEK(CURDATE())-2 DAY) as week_start,
                               DATE_ADD(DATE_SUB(CURDATE(), INTERVAL DAYOFWEEK(CURDATE())-2 DAY), INTERVAL 6 DAY) as week_end
                       ),
                       consultation_stats AS (
                           SELECT
                               DAYOFWEEK(wts.slot_date) as day_of_week,
                               COUNT(*) as consultation_count
                           FROM weekly_time_slots wts
                                    CROSS JOIN this_week tw
                           WHERE wts.user_no = #{lawyerNo}
                             AND wts.slot_date BETWEEN tw.week_start AND tw.week_end
                             AND wts.status IN (1, 2)  -- 예약됨(1) 또는 완료됨(2)
                           GROUP BY DAYOFWEEK(wts.slot_date)
                       ),
                       broadcast_stats AS (
                           SELECT
                               DAYOFWEEK(bs.date) as day_of_week,
                               COUNT(*) as broadcast_count
                           FROM broadcast_schedule bs
                                    CROSS JOIN this_week tw
                           WHERE bs.user_no = #{lawyerNo}
                             AND bs.date BETWEEN tw.week_start AND tw.week_end
                           GROUP BY DAYOFWEEK(bs.date)
                       )
        SELECT
            wd.day_of_week,
            COALESCE(cs.consultation_count, 0) as consultation_count,
            COALESCE(bs.broadcast_count, 0) as broadcast_count
        FROM week_days wd
                 LEFT JOIN consultation_stats cs ON wd.day_of_week = cs.day_of_week
                 LEFT JOIN broadcast_stats bs ON wd.day_of_week = bs.day_of_week
        ORDER BY wd.day_of_week
    </select>

</mapper>