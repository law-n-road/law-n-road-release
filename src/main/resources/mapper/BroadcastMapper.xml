<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.lawnroad.broadcast.live.mapper.BroadcastMapper">
    <!-- 방송 개별 세부정보 MAP -->
    <resultMap id="BroadcastViewDetailMap" type="com.lawnroad.broadcast.live.dto.BroadcastViewDetailDto">
        <result property="title" column="title"/>
        <result property="categoryName" column="category_name"/>
        <result property="userNo" column="user_no"/>
        <result property="lawyerName" column="lawyer_name"/>
        <result property="lawyerProfilePath" column="lawyer_profile"/>
        <result property="date" column="date"/>
        <result property="startTime" column="start_time"/>
        <result property="endTime" column="end_time"/>

    </resultMap>

    <!-- 방송 리스트 MAP -->
    <resultMap id="BroadcastListMap" type="com.lawnroad.broadcast.live.dto.BroadcastListDto">
        <id property="broadcastNo" column="broadcast_no"/>
        <result property="startTime" column="start_time"/>
        <result property="title" column="title"/>
        <result property="thumbnailPath" column="thumbnail_path"/>
        <result property="categoryName" column="category_name"/>
        <result property="lawyerName" column="lawyer_name"/>
        <result property="profilePath" column="profile_path"/>
        <!-- 스케줄 번호 기준으로 키워드 조회 -->
        <collection property="keywords" ofType="String" column="schedule_no"
                    select="com.lawnroad.broadcast.live.mapper.BroadcastMapper.findKeywordsByScheduleNo"/>
    </resultMap>

    <insert id="insertBroadcast" parameterType="com.lawnroad.broadcast.live.model.BroadcastVo" useGeneratedKeys="true" keyProperty="no">
        INSERT INTO broadcast
        (user_no, schedule_no, session_id, start_time, status)
        VALUES
        (#{userNo}, #{scheduleNo}, #{sessionId}, #{startTime}, #{status})
    </insert>

    <select id="findByScheduleNo" resultType="com.lawnroad.broadcast.live.model.BroadcastVo">
        SELECT *
        FROM broadcast
        WHERE schedule_no = #{scheduleNo}
        LIMIT 1
    </select>

    <!-- 방송 번호로 세션 ID, 상태 등 조회 -->
    <select id="findByNo" resultType="com.lawnroad.broadcast.live.dto.BroadcastSessionDto">
        SELECT
        b.no AS broadcast_no,
        b.session_id,
        b.status,
        b.start_time
        FROM broadcast b
        WHERE b.no = #{broadcastNo}
    </select>

    <select id="findBySessionId" resultType="com.lawnroad.broadcast.live.model.BroadcastVo">
        SELECT *
        FROM broadcast
        WHERE session_id = #{sessionId}
        LIMIT 1
    </select>

    <!-- 변호사용: schedule_no 기반 -->
    <select id="findDetailByScheduleNo" resultMap="BroadcastViewDetailMap">
        SELECT
        bs.name AS title,
        c.name AS category_name,
        l.no AS user_no,
        l.name AS lawyer_name,
        l.profile AS lawyer_profile,
        bs.date,
        bs.start_time,
        bs.end_time
        FROM broadcast_schedule bs
        JOIN category c ON bs.category_no = c.no
        JOIN user u ON bs.user_no = u.no
        JOIN lawyer l ON u.no = l.no
        WHERE bs.no = #{scheduleNo}
    </select>

    <!-- 시청자용: broadcast_no 기반 -->
    <select id="findDetailByBroadcastNo" resultMap="BroadcastViewDetailMap">
        SELECT
        bs.name AS title,
        c.name AS category_name,
        l.no AS user_no,
        l.name AS lawyer_name,
        l.profile AS lawyer_profile
        FROM broadcast b
        JOIN broadcast_schedule bs ON b.schedule_no = bs.no
        JOIN category c ON bs.category_no = c.no
        JOIN user u ON bs.user_no = u.no
        JOIN lawyer l ON u.no = l.no
        WHERE b.no = #{broadcastNo}
    </select>

    <!-- 키워드 리스트 -->
    <select id="findKeywordsByScheduleNo" resultType="String">
        SELECT keyword FROM keyword WHERE schedule_no = #{scheduleNo}
    </select>

    <!-- 방송no로 스케줄no 조회   -->
    <select id="findScheduleNoByBroadcastNo" resultType="long">
        SELECT schedule_no
        FROM broadcast
        WHERE no = #{broadcastNo}
    </select>

    <!-- 방송 종료 -->
    <update id="endBroadcast" parameterType="long">
        UPDATE broadcast
        SET
        end_time = NOW(),
        status = 'DONE'
        WHERE no = #{broadcastNo}
    </update>

    <insert id="insertReport" parameterType="com.lawnroad.broadcast.live.dto.BroadcastReportRequestDto">
        INSERT INTO broadcast_report
        (broadcast_no, user_no, reason_code, detail_reason)
        VALUES
        (#{broadcastNo}, #{userNo}, #{reasonCode}, #{detailReason})
    </insert>

    <!-- 신고 코드, 라벨 조회 (기타를 가장 아래에 ORDER BY 나머지는 알파벳순 -->
    <select id="findAllReportReasons" resultType="com.lawnroad.broadcast.live.dto.ReportReasonDto">
        SELECT code, label
        FROM report_reason_code
        ORDER BY
        CASE WHEN label = '기타' THEN 1 ELSE 0 END,
        label ASC
    </select>
    <!-- 방송 목록 조회 -->
    <select id="selectLiveBroadcastsPaged" resultMap="BroadcastListMap">
        SELECT
        b.no AS broadcast_no,
        b.start_time,
        s.no AS schedule_no,
        s.name AS title,
        s.thumbnail_path,
        c.name AS category_name,
        l.name AS lawyer_name,
        l.profile
        FROM broadcast b
        JOIN broadcast_schedule s ON b.schedule_no = s.no
        JOIN user u ON b.user_no = u.no
        JOIN lawyer l ON u.no = l.no
        JOIN category c ON s.category_no = c.no
        WHERE b.status = 'RECORD'
        ORDER BY b.start_time DESC
        LIMIT #{size} OFFSET #{offset}
    </select>
    <!--  방송 갯수 조회  -->
    <select id="countLiveBroadcasts" resultType="long">
        SELECT COUNT(*)
        FROM broadcast b
        WHERE b.status = 'RECORD'
    </select>
    <!-- 세션ID 가져오기 -->
    <select id="findSessionIdByBroadcastNo" resultType="String">
        SELECT session_id FROM broadcast WHERE no = #{broadcastNo}
    </select>
    <!-- 스케줄no가 현재 방송중이면 가져오기 -->
    <select id="findLiveBroadcastNoByScheduleNo" resultType="java.lang.Long">
        SELECT no
        FROM broadcast
        WHERE schedule_no = #{scheduleNo}
        AND status = 'RECORD'
    </select>
    <!-- 스케줄 end_time보다 30분이 지났으나 여전히 RECORD 인 컬럼 찾아서 DONE 처리 -->
    <update id="expireOverdueBroadcasts">
        UPDATE broadcast b
        JOIN broadcast_schedule s ON b.schedule_no = s.no
        SET
        b.status = 'DONE',
        b.end_time = TIMESTAMPADD(MINUTE, 30, s.end_time)
        WHERE
        b.status = 'RECORD'
        AND TIMESTAMPADD(MINUTE, 30, s.end_time) &lt;= NOW()
    </update>

    <!-- 방송 상태 확인 -->
    <select id="findBroadcastStatusByScheduleNo" resultType="com.lawnroad.broadcast.live.dto.BroadcastStatusDto">
        SELECT
        no AS broadcastNo,
        status
        FROM broadcast
        WHERE schedule_no = #{scheduleNo}
    </select>
</mapper>