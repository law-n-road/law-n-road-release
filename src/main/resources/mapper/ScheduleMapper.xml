<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.lawnroad.broadcast.live.mapper.ScheduleMapper">

    <resultMap id="ScheduleDetailMap" type="com.lawnroad.broadcast.live.dto.ScheduleDetailDto">
        <id property="scheduleNo" column="schedule_no"/>
        <result property="userNo" column="user_no"/>
        <result property="categoryNo" column="category_no"/>
        <result property="name" column="name"/>
        <result property="content" column="content"/>
        <result property="thumbnailPath" column="thumbnail_path"/>
        <result property="date" column="date"/>
        <result property="startTime" column="start_time"/>
        <result property="endTime" column="end_time"/>
        <result property="categoryName" column="category_name"/>

        <!-- 키워드 리스트 매핑 (서브쿼리 사용) -->
        <collection property="keywords" ofType="String"
                    column="schedule_no"
                    select="findKeywordsByScheduleNo"/>
    </resultMap>

    <insert id="insertSchedule" parameterType="com.lawnroad.broadcast.live.model.ScheduleVo" useGeneratedKeys="true" keyProperty="no">
        INSERT INTO broadcast_schedule (
        user_no, category_no, name, content, thumbnail_path, date, start_time, end_time, created_at
        )
        VALUES (
        #{userNo}, #{categoryNo}, #{name}, #{content}, #{thumbnailPath}, #{date}, #{startTime}, #{endTime}, NOW()
        )
    </insert>

    <select id="findAllByDate" resultType="com.lawnroad.broadcast.live.dto.ScheduleDateDto">
        SELECT bs.no,
        bs.name,
        bs.content,
        bs.date,
        bs.start_time,
        bs.end_time,
        l.name AS lawyer_name
        FROM broadcast_schedule bs
        JOIN user u ON (bs.user_no = u.no)
        JOIN lawyer l ON (u.no = l.no)
        WHERE date = #{date}
        ORDER BY bs.start_time
    </select>

    <select id="findAllByMonth" resultType="com.lawnroad.broadcast.live.dto.ScheduleCalendarDto">
        SELECT
        bs.no AS scheduleNo,
        bs.name AS title,
        bs.date,
        bs.start_time,
        bs.end_time,
        l.name AS lawyer_name
        FROM broadcast_schedule bs
        JOIN user u ON (bs.user_no = u.no)
        JOIN lawyer l ON (u.no = l.no)
        WHERE DATE_FORMAT(bs.date, '%Y-%m') = #{month}
        ORDER BY bs.date, bs.start_time
    </select>

    <select id="findAllByLawyer" resultType="com.lawnroad.broadcast.live.dto.ScheduleResponseDto">
        SELECT
        bs.no AS scheduleNo,
        bs.name AS title,
        bs.date,
        bs.start_time AS startTime,
        bs.end_time AS endTime,
        c.name AS categoryName
        FROM broadcast_schedule bs
        JOIN category c ON bs.category_no = c.no
        WHERE bs.user_no = #{userNo}
        ORDER BY bs.date ASC, bs.start_time ASC
    </select>

    <select id="findByScheduleNo" resultMap="ScheduleDetailMap">
        SELECT bs.no AS schedule_no,
        bs.user_no,
        bs.category_no,
        bs.name,
        bs.content,
        bs.thumbnail_path,
        bs.date,
        bs.start_time,
        bs.end_time,
        c.name AS category_name
        FROM broadcast_schedule bs
        JOIN category c ON bs.category_no = c.no
        WHERE bs.no = #{scheduleNo}
    </select>
    <!-- 키워드 리스트를 별도로 조회하는 select -->
    <select id="findKeywordsByScheduleNo" resultType="String">
        SELECT keyword FROM keyword WHERE schedule_no = #{schedule_no}
    </select>

    <!-- 키워드 리스트를 별도로 조회하는 select -->
    <select id="findKeywordsByScheduleNo" resultType="String">
        SELECT keyword FROM keyword WHERE schedule_no = #{schedule_no}
    </select>

    <update id="updateSchedule" parameterType="com.lawnroad.broadcast.live.dto.ScheduleUpdateDto">
        UPDATE broadcast_schedule
        SET
        category_no = #{categoryNo},
        name = #{name},
        content = #{content},
        thumbnail_path = #{thumbnailPath}
        WHERE no = #{scheduleNo}
    </update>

    <!-- 방송 스케줄 삭제 -->
    <delete id="deleteScheduleByNo" parameterType="long">
        DELETE FROM broadcast_schedule
        WHERE no = #{scheduleNo}
    </delete>

</mapper>